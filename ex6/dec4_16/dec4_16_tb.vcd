$date
	Mon Nov 15 19:24:16 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module dec4_16_tb $end
$var wire 16 ! Y [0:15] $end
$var reg 1 " En $end
$var reg 4 # W [3:0] $end
$var integer 32 $ bit_value_one_loc [31:0] $end
$var integer 32 % i [31:0] $end
$scope module UUT $end
$var wire 1 " En $end
$var wire 4 & W [3:0] $end
$var wire 16 ' Y [0:15] $end
$var wire 4 ( M [0:3] $end
$scope module dec1 $end
$var wire 1 " En $end
$var wire 2 ) W [1:0] $end
$var reg 4 * Y [0:3] $end
$upscope $end
$scope module dec2 $end
$var wire 1 + En $end
$var wire 2 , W [1:0] $end
$var reg 4 - Y [0:3] $end
$upscope $end
$scope module dec3 $end
$var wire 1 . En $end
$var wire 2 / W [1:0] $end
$var reg 4 0 Y [0:3] $end
$upscope $end
$scope module dec4 $end
$var wire 1 1 En $end
$var wire 2 2 W [1:0] $end
$var reg 4 3 Y [0:3] $end
$upscope $end
$scope module dec5 $end
$var wire 1 4 En $end
$var wire 2 5 W [1:0] $end
$var reg 4 6 Y [0:3] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 6
b0 5
04
b0 3
b0 2
01
b0 0
b0 /
0.
b0 -
b0 ,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
bx %
b10 $
b0 #
0"
b0 !
$end
#10
b1000000000000000 !
b1000000000000000 '
b1000 -
1+
b1000 (
b1000 *
1"
b10000 %
#20
b100000000000000 !
b100000000000000 '
b100 -
b1 ,
b1 /
b1 2
b1 5
b1 #
b1 &
b10000 %
#30
b10000000000000 !
b10000000000000 '
b10 -
b10 ,
b10 /
b10 2
b10 5
b10 #
b10 &
b10000 %
#40
b1000000000000 !
b1000000000000 '
b1 -
b11 ,
b11 /
b11 2
b11 5
b11 #
b11 &
b11 $
b10000 %
#50
b10000 %
#60
b1000 0
1.
0+
b100 (
b100 *
b100000000000 !
b100000000000 '
b0 -
b1 )
b0 ,
b0 /
b0 2
b0 5
b100 #
b100 &
b100 $
#70
b10000 %
#80
b10000000000 !
b10000000000 '
b100 0
b1 ,
b1 /
b1 2
b1 5
b10000 %
b101 #
b101 &
b101 $
#90
b1000000000 !
b1000000000 '
b10 0
b10 ,
b10 /
b10 2
b10 5
b110 #
b110 &
b110 $
#100
b10000 %
#110
b100000000 !
b100000000 '
b1 0
b11 ,
b11 /
b11 2
b11 5
b111 #
b111 &
b111 $
#120
b10000 %
#130
b1000 3
11
0.
b10 (
b10 *
b10000000 !
b10000000 '
b0 0
b10 )
b0 ,
b0 /
b0 2
b0 5
b1000 #
b1000 &
b1000 $
#140
b10000 %
#150
b1000000 !
b1000000 '
b100 3
b1 ,
b1 /
b1 2
b1 5
b1001 #
b1001 &
b1001 $
#160
b10000 %
#170
b100000 !
b100000 '
b10 3
b10 ,
b10 /
b10 2
b10 5
b1010 #
b1010 &
b1010 $
#180
b10000 %
#190
b10000 !
b10000 '
b1 3
b11 ,
b11 /
b11 2
b11 5
b1011 #
b1011 &
b1011 $
#200
b10000 %
#210
b1000 6
14
01
b1 (
b1 *
b1000 !
b1000 '
b0 3
b11 )
b0 ,
b0 /
b0 2
b0 5
b1100 #
b1100 &
b1100 $
#220
b10000 %
#230
b100 !
b100 '
b100 6
b1 ,
b1 /
b1 2
b1 5
b1101 #
b1101 &
b1101 $
#240
b10000 %
#250
b10 !
b10 '
b10 6
b10 ,
b10 /
b10 2
b10 5
b1110 #
b1110 &
b1110 $
#260
b10000 %
#270
b1 !
b1 '
b1 6
b11 ,
b11 /
b11 2
b11 5
b1111 #
b1111 &
b1111 $
#280
b10000 %
#290
