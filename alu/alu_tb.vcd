$date
	Fri Dec 10 11:43:44 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 64 " result [63:0] $end
$var reg 1 # operand1 $end
$var reg 1 $ operand2 $end
$var reg 4 % operation [3:0] $end
$scope module UUT $end
$var wire 64 & and_res [63:0] $end
$var wire 1 # operand1 $end
$var wire 1 $ operand2 $end
$var wire 4 ' operation [3:0] $end
$var wire 64 ( or_res [63:0] $end
$var wire 64 ) difference [63:0] $end
$var wire 64 * addition [63:0] $end
$var reg 64 + res [63:0] $end
$var reg 1 ! zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b1 *
b1111111111111111111111111111111111111111111111111111111111111111 )
b1 (
b0 '
b0 &
b0 %
1$
0#
b0 "
1!
$end
#10
b0 (
b1 %
b1 '
b0 *
b0 )
0$
#20
0!
b1 "
b1 +
b1 (
b10 %
b10 '
b1 *
b1111111111111111111111111111111111111111111111111111111111111111 )
1$
#30
b1111111111111111111111111111111111111111111111111111111111111111 "
b1111111111111111111111111111111111111111111111111111111111111111 +
b110 %
b110 '
#40
b10 "
b10 +
b1 &
b10 %
b10 '
b10 *
b0 )
1#
#50
